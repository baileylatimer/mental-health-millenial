{"version":3,"sources":["webpack:///./src/components/ProductForm/index.js","webpack:///./src/templates/ProductPage/styles.js","webpack:///./src/templates/ProductPage/index.js","webpack:///./node_modules/lodash/find.js","webpack:///./node_modules/lodash/_baseFindIndex.js","webpack:///./node_modules/lodash/toInteger.js","webpack:///./node_modules/lodash/_trimmedEndIndex.js","webpack:///./node_modules/lodash/findIndex.js","webpack:///./node_modules/lodash/_createFind.js","webpack:///./node_modules/lodash/isEqual.js","webpack:///./node_modules/lodash/toFinite.js","webpack:///./node_modules/lodash/_baseTrim.js","webpack:///./node_modules/lodash/toNumber.js"],"names":["ProductForm","product","variants","options","initialVariant","minVariantPrice","priceRange","useState","variant","quantity","useContext","StoreContext","addVariantToCart","store","client","adding","productVariant","helpers","variantForOptions","availableForSale","available","setAvailable","checkAvailability","useCallback","productId","fetch","then","result","filter","shopifyId","useEffect","price","Intl","NumberFormat","undefined","currency","currencyCode","minimumFractionDigits","style","format","className","type","disabled","onClick","ProductTitle","styled","h1","ProductDescription","div","ProductPage","data","shopifyProduct","collection","shopifyCollection","console","log","title","description","images","map","image","fluid","localFile","childImageSharp","key","id","alt","dangerouslySetInnerHTML","__html","descriptionHtml","find","createFind","module","exports","array","predicate","fromIndex","fromRight","length","index","toFinite","value","remainder","reWhitespace","string","test","charAt","baseFindIndex","baseIteratee","toInteger","nativeMax","Math","max","isArrayLike","keys","findIndexFunc","iterable","Object","iteratee","baseIsEqual","other","toNumber","trimmedEndIndex","reTrimStart","slice","replace","baseTrim","isObject","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","valueOf","isBinary"],"mappings":"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","file":"component---src-templates-product-page-index-js-f59309fbc19be35cfedf.js","sourcesContent":["import React, { useState, useContext, useEffect, useCallback } from 'react'\nimport find from 'lodash/find'\nimport isEqual from 'lodash/isEqual'\nimport PropTypes from 'prop-types'\n\nimport StoreContext from '~/context/StoreContext'\n\nconst ProductForm = ({ product }) => {\n  const {\n    options,\n    variants,\n    variants: [initialVariant],\n    priceRange: { minVariantPrice },\n  } = product\n  const [variant, setVariant] = useState({ ...initialVariant })\n  const [quantity, setQuantity] = useState(1)\n  const {\n    addVariantToCart,\n    store: { client, adding },\n  } = useContext(StoreContext)\n\n  const productVariant =\n    client.product.helpers.variantForOptions(product, variant) || variant\n  const [available, setAvailable] = useState(productVariant.availableForSale)\n\n  const checkAvailability = useCallback(\n    productId => {\n      client.product.fetch(productId).then(() => {\n        // this checks the currently selected variant for availability\n        const result = variants.filter(\n          variant => variant.shopifyId === productVariant.shopifyId\n        )\n        setAvailable(result[0].availableForSale)\n      })\n    },\n    [client.product, productVariant.shopifyId, variants]\n  )\n\n  useEffect(() => {\n    checkAvailability(product.shopifyId)\n  }, [productVariant, checkAvailability, product.shopifyId])\n\n  const handleQuantityChange = ({ target }) => {\n    setQuantity(target.value)\n  }\n\n  const handleOptionChange = (optionIndex, { target }) => {\n    const { value } = target\n    const currentOptions = [...variant.selectedOptions]\n\n    currentOptions[optionIndex] = {\n      ...currentOptions[optionIndex],\n      value,\n    }\n\n    const selectedVariant = find(variants, ({ selectedOptions }) =>\n      isEqual(currentOptions, selectedOptions)\n    )\n\n    setVariant({ ...selectedVariant })\n  }\n\n  const handleAddToCart = () => {\n    addVariantToCart(productVariant.shopifyId, quantity)\n  }\n\n  /* \n  Using this in conjunction with a select input for variants \n  can cause a bug where the buy button is disabled, this \n  happens when only one variant is available and it's not the\n  first one in the dropdown list. I didn't feel like putting \n  in time to fix this since its an edge case and most people\n  wouldn't want to use dropdown styled selector anyways - \n  at least if the have a sense for good design lol.\n  */\n  const checkDisabled = (name, value) => {\n    const match = find(variants, {\n      selectedOptions: [\n        {\n          name: name,\n          value: value,\n        },\n      ],\n    })\n    if (match === undefined) return true\n    if (match.availableForSale === true) return false\n    return true\n  }\n\n  const price = Intl.NumberFormat(undefined, {\n    currency: minVariantPrice.currencyCode,\n    minimumFractionDigits: 2,\n    style: 'currency',\n  }).format(variant.price)\n\n  return (\n    <>\n    <div className=\"flex justify-between items-center margin-y-xl\">\n      <h3 >{price}</h3>\n      {/* {options.map(({ id, name, values }, index) => (\n        <React.Fragment key={id}>\n          <label htmlFor={name}>{name} </label>\n          <select\n            name={name}\n            key={id}\n            onChange={event => handleOptionChange(index, event)}\n          >\n            {values.map(value => (\n              <option\n                value={value}\n                key={`${name}-${value}`}\n                disabled={checkDisabled(name, value)}\n              >\n                {value}\n              </option>\n            ))}\n          </select>\n          <br />\n        </React.Fragment>\n      ))}\n      <label htmlFor=\"quantity\">Quantity </label>\n      <input\n        type=\"number\"\n        id=\"quantity\"\n        name=\"quantity\"\n        min=\"1\"\n        step=\"1\"\n        onChange={handleQuantityChange}\n        value={quantity}\n      /> */}\n      <br />\n      <button className=\"link-btn\"\n        type=\"submit\"\n        disabled={!available || adding}\n        onClick={handleAddToCart}\n      >\n      Add to cart &rarr;\n        \n      </button>\n      {!available && <p>This Product is out of Stock!</p>}\n      </div>\n    </>\n  )\n}\n\nProductForm.propTypes = {\n  product: PropTypes.shape({\n    descriptionHtml: PropTypes.string,\n    handle: PropTypes.string,\n    id: PropTypes.string,\n    shopifyId: PropTypes.string,\n    images: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        originalSrc: PropTypes.string,\n      })\n    ),\n    options: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        values: PropTypes.arrayOf(PropTypes.string),\n      })\n    ),\n    productType: PropTypes.string,\n    title: PropTypes.string,\n    variants: PropTypes.arrayOf(\n      PropTypes.shape({\n        availableForSale: PropTypes.bool,\n        id: PropTypes.string,\n        price: PropTypes.string,\n        title: PropTypes.string,\n        shopifyId: PropTypes.string,\n        selectedOptions: PropTypes.arrayOf(\n          PropTypes.shape({\n            name: PropTypes.string,\n            value: PropTypes.string,\n          })\n        ),\n      })\n    ),\n  }),\n  addVariantToCart: PropTypes.func,\n}\n\nexport default ProductForm\n","import styled from '@emotion/styled'\n\nexport const ProductTitle = styled.h1`\n  word-wrap: break-word;\n`\n\nexport const ProductDescription = styled.div`\n\n`","import React from 'react'\nimport { graphql, useStaticQuery, Link, navigate} from 'gatsby'\n\nimport SEO from '~/components/seo'\nimport ProductForm from '~/components/ProductForm'\nimport {\n  Img,\n  Container,\n  TwoColumnGrid,\n  GridLeft,\n  GridRight,\n} from '~/utils/styles'\nimport {\n  ProductTitle,\n  ProductDescription\n} from './styles'\n\nconst ProductPage = ({ data }) => {\n  const product = data.shopifyProduct\nconst collection = data.shopifyCollection\nconsole.log(collection)\n  \n  return (\n    <>\n      <SEO title={product.title} description={product.description} />\n      <Container className=\"padding-top-xxl\">\n        \n        <TwoColumnGrid>\n          <GridLeft>\n            {product.images.map(image => (\n              <Img\n                fluid={image.localFile.childImageSharp.fluid}\n                key={image.id}\n                alt={product.title}\n              />\n            ))}\n          </GridLeft>\n          <GridRight>\n            <ProductTitle className=\"glitch margin-bottom-sm text-xxxl  color-contrast-higher\">{product.title}</ProductTitle>\n            <ProductDescription\n              dangerouslySetInnerHTML={{ __html: product.descriptionHtml }}\n            />\n            <ProductForm product={product} />\n          </GridRight>\n        </TwoColumnGrid>\n        {/* {collection && \n                    <Link to={`/collection/${collection.handle}`}>{collection.title}</Link>\n        } */}\n      </Container>\n    </>\n  )\n}\n\nexport const query = graphql`\n  query($handle: String! $shopifyId: String) {\n    shopifyProduct(handle: { eq: $handle }) {\n      id\n      title\n      handle\n      productType\n      description\n      descriptionHtml\n      shopifyId\n      options {\n        id\n        name\n        values\n      }\n      variants {\n        id\n        title\n        price\n        availableForSale\n        shopifyId\n        selectedOptions {\n          name\n          value\n        }\n      }\n      priceRange {\n        minVariantPrice {\n          amount\n          currencyCode\n        }\n        maxVariantPrice {\n          amount\n          currencyCode\n        }\n      }\n      images {\n        originalSrc\n        id\n        localFile {\n          childImageSharp {\n            fluid(maxWidth: 910) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    }\n\n    shopifyCollection(products: {elemMatch: {shopifyId: {eq: $shopifyId}}}) {\n      title\n      handle\n    }\n  }\n`\n\nexport default ProductPage\n","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nmodule.exports = find;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n"],"sourceRoot":""}